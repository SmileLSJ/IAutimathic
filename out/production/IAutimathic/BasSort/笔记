 ### 归并算法的时间复杂度
 * 推算方法
 ````
 T(1) = C； n=1 时，只需要常量级的执行时间，...
 T(n) = 2*T(n/2) + n； n>1
 T(n) = 2*T(n/2) + n
      = 2*(2*T(n/4) + n/2) + n = 4*T(n/4) + n/2
      = 4*(2*T(n/8) + n/4) + 2*n = 8*T(n/8) + 3*n
      = 8*(2*T(n/16) + n/8) + 3*n =16*T(n/16) + 4*n
      ....
      = 2^k * T(n/2^k) + k * n
      
 通过这样一步一步分解推导，我们可以得到 T(n) = 2^kT(n/2^k)+kn。当 T(n/2^k)=T(1) 时，
 也就是 n/2^k=1，我们得到 k=log2n 。我们将 k 值代入上面的公式，得到 T(n)=Cn+nlog2n 。
 如果我们用大 O 标记法来表示的话，T(n) 就等于 O(nlogn)。所以归并排序的时间复杂度是 O(nlogn)。   
 
 ````

 
 